{
    "swagger": "2.0",
    "info": {
        "description": "A RESTful web service for issue tracking management",
        "title": "GoWeb2 Issue Tracking API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/issues": {
            "get": {
                "description": "Get a list of all issues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Get all issues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Issue"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new issue with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Create a new issue",
                "parameters": [
                    {
                        "description": "Issue object",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            }
        },
        "/issues/{id}": {
            "get": {
                "description": "Get detailed information about a specific issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Get an issue by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing issue with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Update an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Issue object",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an issue by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Delete an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/issues/{id}/time": {
            "post": {
                "description": "Add a new time entry to an existing issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Add time entry to an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Time Entry object",
                        "name": "timeEntry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TimeEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.TimeEntry"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Issue": {
            "type": "object",
            "required": [
                "category",
                "priority",
                "severity",
                "status"
            ],
            "properties": {
                "actual_hours": {
                    "type": "number"
                },
                "assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "$ref": "#/definitions/model.IssueCategory"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "estimated_hours": {
                    "type": "number"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "$ref": "#/definitions/model.IssuePriority"
                },
                "project_id": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/model.IssueSeverity"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.IssueStatus"
                },
                "time_entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TimeEntry"
                    }
                },
                "title": {
                    "type": "string"
                },
                "total_time_spent": {
                    "type": "number"
                }
            }
        },
        "model.IssueCategory": {
            "type": "string",
            "enum": [
                "task",
                "story",
                "question",
                "bug",
                "crm"
            ],
            "x-enum-varnames": [
                "TaskCategory",
                "StoryCategory",
                "QuestionCategory",
                "BugCategory",
                "CRMCategory"
            ]
        },
        "model.IssuePriority": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "LowPriority",
                "MediumPriority",
                "HighPriority",
                "CriticalPriority"
            ]
        },
        "model.IssueSeverity": {
            "type": "string",
            "enum": [
                "normal",
                "high",
                "serious",
                "disaster"
            ],
            "x-enum-varnames": [
                "NormalSeverity",
                "HighSeverity",
                "SeriousSeverity",
                "DisasterSeverity"
            ]
        },
        "model.IssueStatus": {
            "type": "string",
            "enum": [
                "new_status",
                "todo",
                "in_progress",
                "completed",
                "question",
                "blocked",
                "verified"
            ],
            "x-enum-varnames": [
                "NewStatus",
                "TodoStatus",
                "InProgress",
                "Completed",
                "QuestionStatus",
                "BlockedStatus",
                "VerifiedStatus"
            ]
        },
        "model.TimeEntry": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "time_spent": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}